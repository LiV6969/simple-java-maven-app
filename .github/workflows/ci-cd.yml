name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  NAME: ""
  VERSION: ""
  NEW_VERSION: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Environment Variables
        run: |
          export NAME=$(mvn help:evaluate -Dexpression=project.name | grep "^[^\[]")
          export VERSION=$(mvn help:evaluate -Dexpression=project.version | grep "^[^\[]")
          echo "NAME: $NAME"
          echo "VERSION: $VERSION"
          echo "NAME=$NAME" >> "$GITHUB_ENV"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
    

      - name: Increase Patch version
        run: |
          # Parse the version components
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          # Increment the Patch version
          PATCH=$((PATCH + 1))

          # Create the new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Use Maven to set the new version using versions-maven-plugin
          mvn versions:set -DnewVersion=$NEW_VERSION

          # Print the new version
          echo "New version: $NEW_VERSION"

      - name: Build Docker image
        run: |
          docker build --build-arg NAME=$NAME --build-arg NEW_VERSION=$NEW_VERSION -t $NAME .
