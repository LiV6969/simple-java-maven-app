name: Java CI with Maven

# Defines the events that trigger the workflow 
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Defines environment variables for the workflow.
env:
  NAME: ""
  VERSION: ""
  NEW_VERSION: ""

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Environment Variables
        run: |
          echo "NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout | grep '^[^\[]')" >> "$GITHUB_ENV"
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep '^[^\[]')" >> "$GITHUB_ENV"
        id: set-env

      - name: Increase Patch version
        run: |

          mvn build-helper:parse-version versions:set \
            -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} \
            versions:commit
            
           echo "NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        
      - name: Build Docker image
        run: |
          docker build --build-arg NAME=$NAME --build-arg NEW_VERSION=$NEW_VERSION -t $NAME .

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
      - name: Push Docker image to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

        run: |

          docker tag "${NAME}" "${DOCKERHUB_USERNAME}/${NAME}:${NEW_VERSION}"
          docker push "${DOCKERHUB_USERNAME}/${NAME}:${NEW_VERSION}"
          docker tag "${NAME}" "${DOCKERHUB_USERNAME}/${NAME}:latest"
          docker push "${DOCKERHUB_USERNAME}/${NAME}:latest"

      - name: Checkout code
        uses: actions/checkout@v2

      - name: installs your Maven-built Java application
        run: |
          mvn jar:jar install:install help:evaluate -Dexpression=project.name
          
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          directory: ./ansible/
          playbook: ./playbook.yml
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [all]
            ${{ secrets.EC2_IP }}  
        
      - name: Commit and push updated pom.xml
        run: |
          git config --global user.name "${{ secrets.GIT_NAME }}"
          git config --global user.email "${{ secrets.GIT_MAIL }}"
          git commit -am 'Update version to "${NEW_VERSION}" ' --no-verify
          git push -u origin master

    
