name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  NAME: ""
  VERSION: ""
  NEW_VERSION: ""
  ANSIBLE_PLAYBOOK_PATH: ./ansible/playbook.yml
  ANSIBLE_INVENTORY_PATH: ./ansible/inventory.ini

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Environment Variables
        run: |
          echo "NAME=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout | grep '^[^\[]')" >> "$GITHUB_ENV"
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | grep '^[^\[]')" >> "$GITHUB_ENV"
        id: set-env

      - name: Increase Patch version
        run: |
          # Parse the version components
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          # Increment the Patch version
          PATCH=$((PATCH + 1))

          # Create the new version
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Use Maven to set the new version using versions-maven-plugin
          mvn versions:set -DnewVersion=$NEW_VERSION

          # Print the new version
          echo "New version: $NEW_VERSION"

      - name: Build Docker image
        run: |
          docker build --build-arg NAME=$NAME --build-arg NEW_VERSION=$NEW_VERSION -t $NAME .

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
      - name: Push Docker image to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

        run: |
          NAME=${NAME#-}
          echo "Debug: NAME=${NAME}" 
          echo "Debug: NEW_VERSION=${NEW_VERSION}"

          docker tag "${NAME}" "${DOCKERHUB_USERNAME}/${NAME}:${NEW_VERSION}"
          docker push "${DOCKERHUB_USERNAME}/${NAME}:${NEW_VERSION}"

      - name: Deloy wth ansible playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ${{ env.ANSIBLE_PLAYBOOK_PATH }}
          directory: ./ansible/
          key: ${{secrets.SSH_PRIVATE_KEY}}
          inventory: ${{ env.ANSIBLE_INVENTORY_PATH }}
          run: |
            ansible-playbook -i ${{ env.ANSIBLE_INVENTORY_PATH }} ${{ env.ANSIBLE_PLAYBOOK_PATH }}
